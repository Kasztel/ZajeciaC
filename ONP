#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <regex.h>
#define MAX 100
#define FLOAT_REGEX "^-?[0-9]+?\\.?([0-9]+)?\n?$"
#define OPERAND_REGEX "^(\\+?\\-?\\*?\\/?\\=?w?)?\n?$"

int top = 0;
double tab[MAX];

int isfloat (char temp[MAX]) {
    regex_t check;
    int spr;

    spr = regcomp(&check, FLOAT_REGEX, REG_EXTENDED);
    spr = regexec(&check, temp, 0, NULL, 0);

    if(!spr) {
        return 1;
    }
    else {
        return 0;
    }

}

int isoperand (char temp[MAX]) {
    regex_t check;
    int spr;

    spr = regcomp(&check, OPERAND_REGEX, REG_EXTENDED);
    spr = regexec(&check, temp, 0, NULL, 0);

    if(!spr) {
        return 1;
    }
    else {
        return 0;
    }

}

void push(double add) {
    if (top == MAX) {
        printf("Przepełnienie stosu!");
        exit(0);
    }
    else {
        tab[top++] = add;
    }
}
double pop() {
    if (top == 0) {
        printf("Stos pusty, nie ma czego zdjąć!(Prawdopodobnie zostało źle wpisane działanie w ONP");
        exit(0);
    }
    else {
        return tab[--top];
        
    }
}

int main () {
    double answer;
    char *rPtr;
    char temp[MAX];
    double x,y;
    int i = 0;
    printf("Podaj działanie w notacji ONP, oddzielając każdą liczbę/operand klawiszem enter\n");
    printf("Jeśli chcesz zakończyć w którymś momencie działanie programu wpisz znak 'w'\n");
    
    while (1) {
        scanf("%s", temp);
        
        if (isoperand(temp)) {
            char actual_operator = *temp;
            switch (actual_operator) {
                case '+':
                    x = pop();
                    y = pop();
                    push(x+y);
                    continue;
                case '-':
                    y = pop();
                    x = pop();
                    push(x-y);
                    continue;
                case '*':
                    x = pop();
                    y = pop();
                    push(x*y);
                    continue;
                case '/':
                    y = pop();
                    x = pop();
                    if (x == 0) {
                        printf("Nie wolno dzielić przez zero!");
                        exit(0);
                    }
                    push(x/y);
                    continue;
                case '=':
                    answer = pop();
                    printf("Wynik to %lf\n", answer);
                    printf("Jeśli chcesz zakończyć działanie programu, wpisz 'w', lub podaj inne działanie \n");
                    continue;
                case 'w':
                    exit(0);
                default:
                    printf("blad tragiczny");
                    exit(1);
            }
        }
        else if (isfloat(temp)) {
            double forpush = strtod(temp, &rPtr);
            push(forpush);
        }
        else {
            printf("Podczas wpisywania został podany zły argument! Spróbuj ponownie!");
            exit(0);
        }
    }

}
